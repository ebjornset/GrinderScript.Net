<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>net.grinderscript.dotnet</groupId>
		<artifactId>grinderscript-dotnet-parent</artifactId>
		<version>1.2-SNAPSHOT</version>
	</parent>
	<artifactId>grinderscript-dotnet</artifactId>
	<packaging>pom</packaging>
	<name>GrinderScript.Net :: Packager</name>
	<description>This module is used to package the various parts of GrinderScript.Net into one distributable package</description>
	<properties>
		<site.basedir>${project.parent.basedir}</site.basedir>
		<site.documentation.baseurl>..</site.documentation.baseurl>
		<changes.jira.skip>true</changes.jira.skip>
		<log4net.configuration>${project.basedir}/src/build/log4j.properties</log4net.configuration>
	</properties>
	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>grinderscript-dotnet-framework</artifactId>
			<version>${project.version}</version>
			<type>zip</type>
			<classifier>lib</classifier>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>grinderscript-dotnet-framework</artifactId>
			<version>${project.version}</version>
			<type>zip</type>
			<classifier>nupkg</classifier>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>grinderscript-dotnet-core-j4n</artifactId>
			<version>${project.version}</version>
			<type>zip</type>
			<classifier>lib</classifier>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>grinderscript-dotnet-scriptengine</artifactId>
			<version>${project.version}</version>
			<type>zip</type>
			<classifier>lib</classifier>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>grinderscript-dotnet-verifier</artifactId>
			<version>${project.version}</version>
			<type>zip</type>
			<classifier>verifier</classifier>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>assembly-prepare-package</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<!-- collect site for all modules under target/docs so it can be included in the binary afterwards -->
							<descriptors> 
								<descriptor>${project.basedir}/src/main/assembly/docs.xml</descriptor>
							</descriptors> 
							<attach>false</attach>
						</configuration>
					</execution>
					<execution>
						<id>assembly-package</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors> 
								<descriptor>${project.basedir}/src/main/assembly/binary.xml</descriptor> 
								<descriptor>${project.basedir}/src/main/assembly/nupkg.xml</descriptor> 
							</descriptors> 
						</configuration>
					</execution>
				</executions>
			</plugin>
    	</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven-project-info-reports-plugin.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
						</reports>
						<inherited>true</inherited>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
	<profiles>
		<profile>
			<id>release-profile</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack-grinderscript-dotnet</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>grinderscript-dotnet-framework</artifactId>
											<version>${project.version}</version>
											<type>zip</type>
											<classifier>nupkg</classifier>
											<overWrite>true</overWrite>
											<outputDirectory>${project.build.directory}</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>grinderscript-dotnet-samples</artifactId>
											<version>${project.version}</version>
											<type>zip</type>
											<classifier>nupkg</classifier>
											<overWrite>true</overWrite>
											<outputDirectory>${project.build.directory}</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>deploy-to-sourceforge</id>
								<phase>deploy</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
									<fromDir>${project.build.directory}</fromDir>
									<includes>${project.build.finalName}-*.zip</includes>
									<url>sftp://frs.sourceforge.net</url>
									<toDir>home/pfs/project/grindersdotnet/${project.version}</toDir>
									<serverId>${deploy-to-sourceforge.serverId}</serverId>
									<skip>${deploy-to-sourceforge.skip}</skip>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>nuget-push-core</id>
								<phase>deploy</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${nuget.directory}NuGet.exe</executable>
									<arguments>
										<argument>push</argument>
										<argument>${project.build.directory}\nupkg\GrinderScript.Net.Core.${dotnet.assembly.version.full}.nupkg</argument>
										<argument>-NonInteractive</argument>
										<argument>-ApiKey</argument>
										<argument>${nuget-push.apikey}</argument>
									</arguments>
									<skip>${nuget-push-core.skip}</skip>
								</configuration>
							</execution>
							<execution>
								<id>nuget-push-csv</id>
								<phase>deploy</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${nuget.directory}NuGet.exe</executable>
									<arguments>
										<argument>push</argument>
										<argument>${project.build.directory}\nupkg\GrinderScript.Net.Csv.${dotnet.assembly.version.full}.nupkg</argument>
										<argument>-NonInteractive</argument>
										<argument>-ApiKey</argument>
										<argument>${nuget-push.apikey}</argument>
									</arguments>
									<skip>${nuget-push-csv.skip}</skip>
								</configuration>
							</execution>
							<execution>
								<id>nuget-push-samples</id>
								<phase>deploy</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${nuget.directory}NuGet.exe</executable>
									<arguments>
										<argument>push</argument>
										<argument>${project.build.directory}\nupkg\GrinderScript.Net.Samples.${dotnet.assembly.version.full}.nupkg</argument>
										<argument>-NonInteractive</argument>
										<argument>-ApiKey</argument>
										<argument>${nuget-push.apikey}</argument>
									</arguments>
									<skip>${nuget-push-samples.skip}</skip>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.gmaven</groupId>
						<artifactId>gmaven-plugin</artifactId>
						<executions>
							<execution>
								<id>release-tweet</id>
								<phase>deploy</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<source>
import groovyx.net.http.HTTPBuilder
import static groovyx.net.http.Method.*
import static groovyx.net.http.ContentType.*

if ( pom.properties.'release-tweet.skip' != "true" ) {
	def http = new HTTPBuilder('https://api.twitter.com')

	http.auth.oauth pom.properties.'twitter.oauth.consumerKey', pom.properties.'twitter.oauth.consumerSecret', pom.properties.'twitter.oauth.accessToken', pom.properties.'twitter.oauth.secretToken'

	def msg = "Version ${project.version} is released. Download it from ${pom.properties.'downloadpage.versionurl'}. Have fun!"

	println "Tweeting the release of v ${project.version}..."

	http.request( POST, JSON ) { req -&gt;
		uri.path = '/1.1/statuses/update.json'
		send URLENC, [status:msg, source:'GriderScript.Net release']

		response.success = { resp, json -&gt;
			println "Tweet response status: ${resp.statusLine}"
			assert resp.statusLine.statusCode == 200
		}
	}
} else {
	println "Not tweeting the release of v ${project.version}, since 'release-tweet.skip' == ${release-tweet.skip} "
}
									</source>
									<providerSelection>1.8</providerSelection>
									<classpath>
										<element>
											<groupId>org.codehaus.groovy.modules.http-builder</groupId>
											<artifactId>http-builder</artifactId>
										</element>
										<element>
											<groupId>org.apache.httpcomponents</groupId>
											<artifactId>httpclient</artifactId>
										</element>
										<element>
											<groupId>org.apache.httpcomponents</groupId>
											<artifactId>httpcore</artifactId>
										</element>
										<element>
											<groupId>net.sf.json-lib</groupId>
											<artifactId>json-lib</artifactId>
											<classifier>jdk15</classifier>
										</element>
										<element>
											<groupId>xml-resolver</groupId>
											<artifactId>xml-resolver</artifactId>
										</element>
										<element>
											<groupId>oauth.signpost</groupId>
											<artifactId>signpost-commonshttp4</artifactId>
										</element>
										<element>
											<groupId>oauth.signpost</groupId>
											<artifactId>signpost-core</artifactId>
										</element>
										<element>
											<groupId>commons-codec</groupId>
											<artifactId>commons-codec</artifactId>
										</element>
									</classpath>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
