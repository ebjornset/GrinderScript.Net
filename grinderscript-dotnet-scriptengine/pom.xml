<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>net.grinderscript.dotnet</groupId>
		<artifactId>grinderscript-dotnet-parent</artifactId>
		<version>1.1</version>
	</parent>
	<artifactId>grinderscript-dotnet-scriptengine</artifactId>
	<packaging>jar</packaging>
	<name>GrinderScript.Net :: Grinder Script Engine</name>
	<description>This module contains the thin java layer that implements the Grinder Script Engine. Its purpose is to load the .Net side of GrinderScript.Net so The Grinder can call your load tests.</description>
	<properties>
		<site.basedir>${project.parent.basedir}</site.basedir>
		<site.documentation.baseurl>..</site.documentation.baseurl>
		<changes.jira.skip>true</changes.jira.skip>
	</properties>
	<dependencies>
		<dependency>
			<groupId>net.sf.grinder</groupId>
			<artifactId>grinder-core</artifactId>
			<!-- Our artifacts should always be installed into an existing Grinder 
				installation, so we should not package Grinder in our deliverable. -->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.grinder</groupId>
			<artifactId>grinder-test-support</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>grinderscript-dotnet-core-j4n</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>
	<build>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>net.sf.jni4net</groupId>
						<artifactId>jni4net.j</artifactId>
						<version>${jni4net.version}</version>
						<scope>system</scope>
						<systemPath>${project.build.directory}/lib/jni4net.j-${jni4net.version}.jar</systemPath>
					</dependency>
					<dependency>
						<groupId>${project.groupId}</groupId>
						<artifactId>grinderscript-dotnet-core-j4n</artifactId>
						<version>${project.version}</version>
						<scope>system</scope>
						<systemPath>${project.build.directory}/lib/grinderscript-dotnet-core-j4n-${project.version}.jar</systemPath>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>assembly-package</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>${project.basedir}/src/main/assembly/lib.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<artifactItems>
						<artifactItem>
							<groupId>${project.groupId}</groupId>
							<artifactId>grinderscript-dotnet-framework</artifactId>
							<version>${project.version}</version>
							<type>zip</type>
							<classifier>lib</classifier>
							<overWrite>true</overWrite>
							<outputDirectory>${project.build.directory}</outputDirectory>
						</artifactItem>
						<artifactItem>
							<groupId>${project.groupId}</groupId>
							<artifactId>grinderscript-dotnet-core-j4n</artifactId>
							<version>${project.version}</version>
							<type>zip</type>
							<classifier>lib</classifier>
							<overWrite>true</overWrite>
							<outputDirectory>${project.build.directory}</outputDirectory>
						</artifactItem>
					</artifactItems>
				</configuration>
				<executions>
					<execution>
						<id>unpack-grinderscript-dotnet-lib</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin> 
				<artifactId>maven-project-info-reports-plugin</artifactId> 
				<version>${maven-project-info-reports-plugin.version}</version>
				<reportSets> 
					<reportSet> 
						<reports> 
							<report>index</report> 
						</reports> 
						<inherited>true</inherited>
					</reportSet> 
				</reportSets> 
			</plugin> 
			<plugin>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven-surefire-report-plugin.version}</version>
				<reportSets>  
					<reportSet>  
						<id>integration-tests</id>  
						<reports>  
							<report>report-only</report>  
							<report>failsafe-report-only</report>  
						</reports>  
					</reportSet>  
				</reportSets>  
			</plugin>
			<!--
				TODO: Figure out how we can generate javadoc report without it doing a javadoc:aggregate
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
			</plugin>     
			-->
			<plugin>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${maven-jxr-plugin.version}</version>
			</plugin>
			<plugin>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven-checkstyle-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>${org-codehaus-mojo_cobertura-maven-plugin.version}</version>
			</plugin>
			<plugin>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven-pmd-plugin.version}</version>
				<configuration>
					<linkXref>true</linkXref>
					<minimumTokens>100</minimumTokens>
					<minimumPriority>3</minimumPriority>
					<!-- Change minimum priority to see more or less messages -->
					<targetJdk>${target-jdk.version}</targetJdk>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>${org-codehaus-mojo_taglist-maven-plugin.version}</version>
			</plugin>
		</plugins>
	</reporting>
</project>