<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.grinderscript.dotnet</groupId>
	<artifactId>grinderscript-dotnet-parent</artifactId>
	<version>1.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>GrinderScript.Net</name>
	<description>Parent Maven project for GrinderScript.Net, managing the dependencies and other build related stuff. It also contains the documentation, as a plain Maven site.</description>
	<inceptionYear>2013</inceptionYear>
	<url>http://GrinderScript.Net/</url>
	<properties>
		<!-- Name pattern to recognize the test assemblies, so that unit tests 
			are only launched on those, and so that those are excluded from code coverage. 
			Several patterns may be specified using a ";" as delimiter -->
		<visual.test.project.pattern>*.*Tests</visual.test.project.pattern>
		<!-- Version of the .Net tools, which may be 2.0, 3.5 or 4.0 only Default value is 3.5 -->
		<dotnet.tool.version>4.0</dotnet.tool.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Sonar integration stuff -->
		<!--sonar.skippedModules>clr,core-j4n,examples</sonar.skippedModules>
		<sonar.scm.url>scm:git:file://D:/st33/svr-dta/git/GrinderScript.Net.git</sonar.scm.url>
		<sonar.gallio.coverage.tool>OpenCover</sonar.gallio.coverage.tool-->
		<target-jdk.version>1.6</target-jdk.version>
		<!-- Location of where "site" documentation is output; This is for BitBucket only!!! -->  
		<!--siteOutputDirectory>${project.build.directory}/site/${project.artifactId}</siteOutputDirectory-->
		<!--stagingDirectory>${project.build.directory}/staging/${project.artifactId}</stagingDirectory-->
		<github.global.server>github</github.global.server>
        <repository.domain>github.com</repository.domain>
        <repository.user>ebjornset</repository.user>
        <repository.name>GrinderScript.Net</repository.name>	
		<site.basedir>${project.basedir}</site.basedir>
		<!--scmpublish.pubScmUrl>scm:git:git@bitbucket.org:ebjornset/ebjornset.bitbucket.org.git</scmpublish.pubScmUrl--> 	
		<site.documentation.baseurl>.</site.documentation.baseurl>
		<!-- repositories begin -->
		<repository.ext-release.id>ext-release-local</repository.ext-release.id>
		<repository.ext-release.url>http://localhost:8081/artifactory/ext-release-local</repository.ext-release.url>
		<!-- repositories end -->
	
		<!-- Version info for dependencies begin -->
		<jni4net.version>0.8.6.0</jni4net.version>
		<grinder.version>3.11</grinder.version>
		<junit.version>4.11</junit.version>
		<mockito.version>1.9.5</mockito.version>
		<!-- Version info for dependencies end -->

		<!-- Version info for plugins begin -->
		<maven-fluido-skin.version>1.3.0</maven-fluido-skin.version>
		<maven-surefire-plugin.version>2.14</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>2.14</maven-failsafe-plugin.version>
		<maven-compiler-plugin.version>3.0</maven-compiler-plugin.version>
		<maven-resources-plugin.version>2.6</maven-resources-plugin.version>
		<maven-site-plugin.version>3.2</maven-site-plugin.version>
		<maven-scm-publish-plugin.version>1.0-beta-2</maven-scm-publish-plugin.version>
		<maven-source-plugin.version>2.2.1</maven-source-plugin.version>
		<maven-install-plugin.version>2.4</maven-install-plugin.version>
		<maven-assembly-plugin.version>2.4</maven-assembly-plugin.version>
		<maven-deploy-plugin.version>2.7</maven-deploy-plugin.version>
		<maven-release-plugin.version>2.4.1</maven-release-plugin.version>
		<maven-surefire-report-plugin.version>2.14</maven-surefire-report-plugin.version>
		<maven-javadoc-plugin.version>2.9</maven-javadoc-plugin.version>
		<maven-checkstyle-plugin.version>2.10</maven-checkstyle-plugin.version>
		<maven-jxr-plugin.version>2.3</maven-jxr-plugin.version>
		<maven-pmd-plugin.version>3.0.1</maven-pmd-plugin.version>
		<maven-project-info-reports-plugin.version>2.6</maven-project-info-reports-plugin.version>
		<maven-pdf-plugin.version>1.2</maven-pdf-plugin.version>
		<maven-changes-plugin.version>2.9</maven-changes-plugin.version>
		<org-codehaus-mojo_build-helper-maven-plugin.version>1.7</org-codehaus-mojo_build-helper-maven-plugin.version>
		<org-codehaus-mojo_cobertura-maven-plugin.version>2.5.2</org-codehaus-mojo_cobertura-maven-plugin.version>
		<org-codehaus-mojo_taglist-maven-plugin.version>2.4</org-codehaus-mojo_taglist-maven-plugin.version>
		<org-codehaus-sonar-plugins-dotnet_maven-dotnet-plugin.version>1.2</org-codehaus-sonar-plugins-dotnet_maven-dotnet-plugin.version>
		<org-codehaus-mojo_sonar-maven-plugin.version>2.0</org-codehaus-mojo_sonar-maven-plugin.version>
		<org-codehaus-mojo_exec-maven-plugin.version>1.2.1</org-codehaus-mojo_exec-maven-plugin.version>
		<org-eclipse-m2e_lifecycle-mapping.version>1.0.0</org-eclipse-m2e_lifecycle-mapping.version>
		<com-github-github_site-maven-plugin.version>0.7</com-github-github_site-maven-plugin.version>
		<org-apache-maven-doxia_doxia-module-markdown.version>1.3</org-apache-maven-doxia_doxia-module-markdown.version>
		<!-- Version info for plugins end -->
	</properties>
	<modules>
		<module>grinderscript-dotnet</module>
		<module>grinderscript-dotnet-core-j4n</module>
		<module>grinderscript-dotnet-external</module>
		<module>grinderscript-dotnet-framework</module>
		<module>grinderscript-dotnet-samples</module>
		<module>grinderscript-dotnet-scriptengine</module>
		<module>grinderscript-dotnet-verifier</module>
	</modules>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>net.sf.jni4net</groupId>
				<artifactId>jni4net.j</artifactId>
				<version>${jni4net.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.jni4net</groupId>
				<artifactId>jni4net.n</artifactId>
				<version>${jni4net.version}</version>
				<type>dll</type>
			</dependency>
			<dependency>
				<groupId>net.sf.jni4net</groupId>
				<artifactId>jni4net.n.w32.v20</artifactId>
				<version>${jni4net.version}</version>
				<type>dll</type>
			</dependency>
			<dependency>
				<groupId>net.sf.jni4net</groupId>
				<artifactId>jni4net.n.w32.v40</artifactId>
				<version>${jni4net.version}</version>
				<type>dll</type>
			</dependency>
			<dependency>
				<groupId>net.sf.jni4net</groupId>
				<artifactId>jni4net.n.w64.v20</artifactId>
				<version>${jni4net.version}</version>
				<type>dll</type>
			</dependency>
			<dependency>
				<groupId>net.sf.jni4net</groupId>
				<artifactId>jni4net.n.w64.v40</artifactId>
				<version>${jni4net.version}</version>
				<type>dll</type>
			</dependency>
			<dependency>
				<groupId>net.sf.grinder</groupId>
				<artifactId>grinder-core</artifactId>
				<version>${grinder.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.clojure</groupId>
						<artifactId>clojure</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>net.sf.grinder</groupId>
				<artifactId>grinder-dcr-agent</artifactId>
				<version>${grinder.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.grinder</groupId>
				<artifactId>grinder-http</artifactId>
				<version>${grinder.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.grinder</groupId>
				<artifactId>grinder-httpclient</artifactId>
				<version>${grinder.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.grinder</groupId>
				<artifactId>grinder-xmlbeans</artifactId>
				<version>${grinder.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.grinder</groupId>
				<artifactId>grinder-test-support</artifactId>
				<version>${grinder.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${target-jdk.version}</source>
						<target>${target-jdk.version}</target>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven-site-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-scm-publish-plugin</artifactId>
					<version>${maven-scm-publish-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${maven-surefire-report-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
				</plugin>     
				<plugin>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>${maven-jxr-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${maven-pmd-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>${maven-project-info-reports-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-pdf-plugin</artifactId>
					<version>${maven-pdf-plugin.version}</version>
				</plugin>
				<plugin>
				  <artifactId>maven-changes-plugin</artifactId>
				  <version>${maven-changes-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${org-codehaus-mojo_build-helper-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>${org-codehaus-mojo_cobertura-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>taglist-maven-plugin</artifactId>
					<version>${org-codehaus-mojo_taglist-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.sonar-plugins.dotnet</groupId>
					<artifactId>maven-dotnet-plugin</artifactId>
					<version>${org-codehaus-sonar-plugins-dotnet_maven-dotnet-plugin.version}</version>
					<extensions>true</extensions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${org-codehaus-mojo_sonar-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${org-codehaus-mojo_exec-maven-plugin.version}</version>
				</plugin>
 				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${org-eclipse-m2e_lifecycle-mapping.version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.1,)</versionRange>
										<goals>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.github.github</groupId>
					<artifactId>site-maven-plugin</artifactId>
					<version>${com-github-github_site-maven-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-sitedescriptor</id>
						<!-- fetch site.xml before creating site documentation -->
						<phase>pre-site</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/src/site/</outputDirectory>
							<resources>          
								<resource>                  
									<directory>${site.basedir}/src/site/</directory>
									<includes>
										<include>**/site.xml</include>
									</includes>
								</resource>
							</resources>              
						</configuration>            
					</execution>
				</executions>
			</plugin>      
			<plugin>
				<artifactId>maven-site-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-markdown</artifactId>
						<version>${org-apache-maven-doxia_doxia-module-markdown.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<skipDeploy>true</skipDeploy>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<tagNameFormat>v@{project.version}</tagNameFormat>
                    <pushChanges>false</pushChanges>
                    <localCheckout>true</localCheckout>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<configuration>
					<message>Creating site for ${project.artifactId}, ${project.version}</message>
					<!-- this does the trick to place every module in the correct subfolder -->
					<path>${project.distributionManagement.site.url}</path>
					<merge>true</merge>
				</configuration>
				<executions>
					<execution>
						<id>github-site</id>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>site-deploy</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-scm-publish-plugin</artifactId>
				<!--configuration>
					<checkoutDirectory>${scmCheckout.path}</checkoutDirectory>
					<content>${siteContent.path}</content>
				</configuration-->
			</plugin>
			<plugin>
				<artifactId>maven-pdf-plugin</artifactId>
				<configuration>
					<outputDirectory>${project.reporting.outputDirectory}</outputDirectory>
					<includeReports>false</includeReports>
				</configuration>
			</plugin>
			<plugin>
			  <artifactId>maven-changes-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven-project-info-reports-plugin.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>help</report>
							<report>modules</report>
							<report>project-team</report>
							<report>license</report>
							<report>scm</report>
							<report>issue-tracking</report>
							<report>dependency-info</report>
							<report>dependency-management</report>
							<report>dependency-convergence</report>
							<report>plugins</report>
							<report>plugin-management</report>
							<!--
							<report>cim</report>
							<report>distribution-management</report>
							<report>dependencies</report>
							<report>summary</report>
							-->
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<!--
			WIP GSDN-11: 
			Hmm. Getting [WARNING] org.apache.maven.plugin.MojoFailureException: Could not find status Closed.
			Only an empty report is generated. Needs further investigation...
			<plugin>
				<artifactId>maven-changes-plugin</artifactId>
				<version>${maven-project-info-reports-plugin.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>jira-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			-->
		</plugins>
	</reporting>
	<developers>
		<developer>
			<name>Eirik Bjornset</name>
			<timezone>1</timezone>
			<email>ebjornset@gmail.com</email>
		</developer>
	</developers>
	<distributionManagement>
		<site>
			<id>github-pages-site</id>
			<name>Deployment through GitHub's site deployment plugin</name>
			<url>c:\site</url>
		</site>
		<repository>
			<id>libs-release-local</id>
			<name>Internal Release Repository</name>
			<url>http://localhost:8081/artifactory/libs-release-local</url>
		</repository>
		<snapshotRepository>
			<id>libs-snapshot-local</id>
			<name>Internal Snapshot Repository</name>
			<url>http://localhost:8081/artifactory/libs-snapshot-local</url>
		</snapshotRepository>
	</distributionManagement>
	<ciManagement>
		<system>Jenkins</system>
		<url>http://localhost:8080/job/GrinderScript.Net_master_clean-install/</url>
	</ciManagement>
	<scm>
        <url>https://${repository.domain}/${repository.user}/${repository.name}</url>
        <connection>scm:git:ssh://${repository.domain}/${repository.user}/${repository.name}.git</connection>
        <developerConnection>scm:git:ssh://${repository.domain}/${repository.user}/${repository.name}.git</developerConnection>
	  <tag>HEAD</tag>
  </scm>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>manual</distribution>
		</license>
	</licenses>
	<issueManagement>
		<system>JIRA</system>
		<url>https://grinderscriptdotnet.atlassian.net/browse/GSDN</url>
	</issueManagement>
</project>
